// Q8. Coin Change.

class Solution {
    public int coinChange(int[] coins, int amount) {
        int ans = coinCount(coins, amount);
        return (ans == Integer.MAX_VALUE) ? -1 : ans;
    }

    int coinCount(int[] coins, int amount) {
        if (amount == 0) return 0;
        if (amount < 0) return Integer.MAX_VALUE;

        int minCoins = Integer.MAX_VALUE;
        for (int i = 0; i < coins.length; i++) {
            int ans = coinCount(coins, amount - coins[i]);
            if (ans != Integer.MAX_VALUE) {
                minCoins = Math.min(minCoins, 1 + ans);
            }
        }
        return minCoins;
    }

    public static void main(String[] args) {
        Solution sol = new Solution();
        int[] coins = {1, 2, 5};
        int amount = 11;

        int result = sol.coinChange(coins, amount);
        System.out.println("Minimum coins needed: " + result);  // Output: 3
    }
}
